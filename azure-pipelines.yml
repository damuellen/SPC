# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: windows-latest

variables:
  toolchain.directory: C:/Library/Developer/Toolchains/unknown-Asserts-development.xctoolchain/usr/bin
  bin.directory: C:/Library/Swift-development/bin
  icu.directory: C:/Library/icu-67/usr/bin

steps:
- task: BatchScript@1
  inputs:
    filename: C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/Tools/VsDevCmd.bat
    arguments: -no_logo -arch=x64 -host_arch=x64
    modifyEnvironment: true
  displayName: Setup developer environment

- task: run-vcpkg@0
  displayName: 'vcpkg install libxlsxwriter sqlite3'
  timeoutInMinutes: 10
  inputs:
    vcpkgArguments: libxlsxwriter sqlite3
    vcpkgGitCommitId: "5ddd7f02689b7c5aab78711d77f61db5d2e5e79c"
    vcpkgDirectory: 'C:\vcpkg\'
    vcpkgTriplet: 'x64-windows'
    vcpkgGitURL: https://github.com/microsoft/vcpkg.git

- task: PowerShell@2
  timeoutInMinutes: 5
  inputs:
    targetType: 'inline'
    script: |
      Install-Binary -Url "https://download.swift.org/swift-5.5.2-release/windows10/swift-5.5.2-RELEASE/swift-5.5.2-RELEASE-windows10.exe" -Name "installer.exe" -ArgumentList ("-q")
      Write-Host "##vso[task.prependpath]$(toolchain.directory)"
      Write-Host "##vso[task.prependpath]$(bin.directory)"
      Write-Host "##vso[task.prependpath]$(icu.directory)"
  displayName: Install Swift toolchain

- script: |
    swift build -c release -Xlinker /INCREMENTAL:NO -Xlinker /IGNORE:4217 -Xswiftc -gnone -Xswiftc -suppress-warnings -Xswiftc -continue-building-after-errors -Xswiftc -LC:/vcpkg/installed/x64-windows/lib/
  env:
    SDKROOT: C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk
    DEVELOPER_DIR: C:\Library\Developer
  timeoutInMinutes: 15
  continueOnError: true
  displayName: Build Swift package

- task: CopyFiles@2
  inputs:
    contents: '$(System.DefaultWorkingDirectory)\.build\x86_64-unknown-windows-msvc\release\*.exe'
    targetFolder: $(Build.ArtifactStagingDirectory)
  displayName: Copy build artifacts to staging directory

- task: CopyFiles@2
  inputs:
    contents: '$(System.DefaultWorkingDirectory)\.build\x86_64-unknown-windows-msvc\release\*.dll'
    targetFolder: $(Build.ArtifactStagingDirectory)
  displayName: Copy build artifacts to staging directory

- task: CopyFiles@2
  inputs:
    contents: 'C:\vcpkg\installed\x64-windows\bin\*.dll'
    targetFolder: $(Build.ArtifactStagingDirectory)
  displayName: Copy build artifacts to staging directory

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: x86_64-unknown-windows-msvc-release
  displayName: Publish build artifacts
