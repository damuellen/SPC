# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: windows-latest

variables:
  toolchain.directory: C:/Library/Developer/Toolchains/unknown-Asserts-development.xctoolchain/usr/bin
  bin.directory: C:/Library/Swift-development/bin
  icu.directory: C:/Library/icu-67/usr/bin

steps:
- task: BatchScript@1
  inputs:
    filename: C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/Tools/VsDevCmd.bat
    arguments: -no_logo -arch=x64 -host_arch=x64
    modifyEnvironment: true
  displayName: Setup developer environment

- script: |
    curl -L "https://raw.githubusercontent.com/apple/swift/main/stdlib/public/Platform/ucrt.modulemap" -o "%UniversalCRTSdkDir%\Include\%UCRTVersion%\ucrt\module.modulemap"
    curl -L "https://raw.githubusercontent.com/apple/swift/main/stdlib/public/Platform/visualc.modulemap" -o "%VCToolsInstallDir%\include\module.modulemap"
    curl -L "https://raw.githubusercontent.com/apple/swift/main/stdlib/public/Platform/visualc.apinotes" -o "%VCToolsInstallDir%\include\visualc.apinotes"
    curl -L "https://raw.githubusercontent.com/apple/swift/main/stdlib/public/Platform/winsdk.modulemap" -o "%UniversalCRTSdkDir%\Include\%UCRTVersion%\um\module.modulemap"
  displayName: Configure Swift SDK

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Install-Binary -Url "https://swift.org/builds/swift-5.5-branch/windows10/swift-5.5-DEVELOPMENT-SNAPSHOT-2021-04-19-a/swift-5.5-DEVELOPMENT-SNAPSHOT-2021-04-19-a-windows10.exe" -Name "installer.exe" -ArgumentList ("-q")
      Write-Host "##vso[task.prependpath]$(toolchain.directory)"
      Write-Host "##vso[task.prependpath]$(bin.directory)"
      Write-Host "##vso[task.prependpath]$(icu.directory)"
  displayName: Install Swift toolchain

- script: |
    swift build -v -c release -Xswiftc -suppress-warnings
  env:
    SDKROOT: C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk
    DEVELOPER_DIR: C:\Library\Developer
  displayName: Build Swift package

- script: FOR %%f IN (.build\x86_64-unknown-windows-msvc\release\*.exe) DO llvm-strip %%f
  displayName: Strip symbols from executables

- task: CopyFiles@2
  inputs:
    contents: '$(System.DefaultWorkingDirectory)\.build\x86_64-unknown-windows-msvc\release\*.exe'
    targetFolder: $(Build.ArtifactStagingDirectory)
  displayName: Copy build artifacts to staging directory

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: x86_64-unknown-windows-msvc-release
  displayName: Publish build artifacts
